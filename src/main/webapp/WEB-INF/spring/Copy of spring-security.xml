<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http auto-config="true" use-expressions="true"  ><!--  authentication-manager-ref="authenticationManager" -->
		<!-- Permission. Note order: general at the end, more specific at the top -->
		<intercept-url pattern="/api/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/api/org/**" access="hasAnyRole('ROLE_ADMIN','ROLE_ORGOWNER')" />
		<intercept-url pattern="/api/service/my/*" access="hasRole('ROLE_SERVICEOWNER')" />
		<intercept-url pattern="/api/service/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SERVICEOWNER')"/>
		<intercept-url pattern="/api/user/my" access="isAuthenticated()" />
		<intercept-url pattern="/api/user/modify" access="isAuthenticated()" />
		<intercept-url pattern="/api/user/login" access="permittAll" />
		<intercept-url pattern="/api/user/logout" access="isAuthenticated()" />
		<intercept-url pattern="/api/user/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/api/catalog/**" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()"/>
		<logout logout-url="/api/user/logout" invalidate-session="true" delete-cookies="true"
			logout-success-url="/api/user/logout/success"/>		
	</http>
	
	 <!-- My authentication with custom db (not using ACL) -->
	 <authentication-manager  alias="authenticationManager"> <!--  -->
		<authentication-provider user-service-ref="jdbcUserService"><!--  ref="customAuthenticationProvider" -->
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
